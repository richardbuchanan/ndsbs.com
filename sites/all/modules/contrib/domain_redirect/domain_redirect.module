<?php

/**
 * Implements hook_redirect_load_by_source_alter().
 */
function domain_redirect_redirect_load_by_source_alter(array &$redirects, $source, $context) {
  $domain = domain_get_domain();

  foreach ($redirects as $rid => $redirect) {
    if (!empty($redirect->source_options['domain_id'])) {
      if ($redirect->source_options['domain_id'] != $domain['domain_id']) {
        unset($redirects[$rid]);
        continue;
      }
    }
  }
}

function domain_redirect_redirect_parse_url_alter(&$parsed, $original_url) {
  $domains = domain_domains();
  if (isset($parsed['host'])) {
    foreach ($domains as $domain) {
      if ($parsed['host'] == $domain['subdomain']) {
//        dpm($domain);
//        dpm($parsed);
      }
    }
  }
}

function domain_redirect_redirect_presave($redirect) {
  if (!empty($redirect->devel_generate)) {

  }
}

/**
 * Implements hook_redirect_hash_alter().
 */
function domain_redirect_redirect_hash_alter(&$hash, $redirect) {
  if (!empty($redirect->source_options['domain_id'])) {
    $hash['domain_id'] = $redirect->source_options['domain_id'];
  }
}

function _domain_redirect_url_alter(&$path, array &$options) {
  $domain = domain_get_domain();
  if (!empty($options['domain_id'])) {
    if ($domain = domain_load($options['domain_id'])) {
//      dpm($domain);
      $options['base_url'] = rtrim($domain['path'], '/');
      $options['absolute'] = TRUE;
      if (empty($options['alias']) && !empty($path)) {
        domain_path($domain['domain_id'], $path, $options, $path);
      }
    }
  }
}

/**
 * Implements hook_redirect_url_alter().
 */
function domain_redirect_redirect_url_alter(&$path, array &$options) {
  _domain_redirect_url_alter($path, $options);
}

/**
 * Implements hook_redirect_alter().
 */
function domain_redirect_redirect_alter($redirect) {
  // If the redirect is not currently assigned a domain, default it to the
  // current domain.
  if (empty($redirect->redirect_options['domain_id'])) {
    $domain = domain_get_domain();
    $redirect->redirect_options += array(
      'domain_id' => $domain['domain_id'],
      //'base_url' => rtrim($domain['path'], '/'),
      //'absolute' => TRUE,
    );
  }
  // Support rewriting the redirect path based on a domain ID when available.
  _domain_redirect_url_alter($redirect->redirect, $redirect->redirect_options);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function domain_redirect_form_redirect_edit_form_alter(&$form, $form_state) {
  $domains = domain_domains();
  $options = array();
  foreach ($domains as $domain) {
    $options[$domain['domain_id']] = $domain['path'];
  }

  $form['source_options']['domain_id'] = array(
    '#type' => 'select',
    '#title' => t('From domain'),
    '#options' => array('' => t('All domains')) + $options,
    '#default_value' => isset($form['source_options']['#value']['domain_id']) ? $form['source_options']['#value']['domain_id'] : '',
    '#access' => !empty($options),
    // @todo support #ajax here to rewrite the 'source' prefix.
  );

  // Unset the value from the base element otherwise our changes will never get
  // saved.
  unset($form['source_options']['#value']['domain_id']);
}
