<?php

class ViewsNaturalSortDaysOfTheWeekTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Views Natural Sort Days of the Week',
      'description' => 'Tests Days of the Week Sorting',
      'group' => 'Views Natural Sort',
    );
  }

  function testDefaultDayReplace() {
    variable_set('views_natural_sort_days_of_the_week_enabled', TRUE);
    foreach(views_natural_sort_days_of_the_week_get_default_days() as $replaced => $day) {
      $this->assertEqual(views_natural_sort_days_of_the_week_sort_days($day), $replaced);
    }
  }

  function testFirstDayMonday() {
    variable_set('views_natural_sort_days_of_the_week_enabled', TRUE);
    $variable_original = variable_get("views_natural_sort_days_of_the_week_first_day_en", "Sunday");
    variable_set("views_natural_sort_days_of_the_week_first_day_en", "Monday");
    db_set_active("default");
    $expected = array(
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday",
      "Sunday",
    );
    foreach($expected as $replaced => $day) {
      $this->assertEqual(views_natural_sort_days_of_the_week_sort_days($day), $replaced);
    }
    variable_set("views_natural_sort_days_of_the_week_first_day_en", $variable_original);
  }
  function testAbbreviations() {
    variable_set('views_natural_sort_days_of_the_week_enabled', TRUE);
    $expected = array(
      "Sun",
      "Mon.",
      "Tues",
      "Wed",
      "Thur",
      "Fri.",
      "Sat",
    );
    foreach($expected as $replaced => $day) {
      $this->assertEqual(views_natural_sort_days_of_the_week_sort_days($day), $replaced);
    }
  }
}
