<?php

/**
 * @file
 * Install, update and uninstall functions for the faq_videos module.
 */

/**
 * Implements hook_install().
 */
function faq_videos_install() {
  node_types_rebuild();

  foreach (_faq_video_installed_fields() as $field) {
    field_create_field($field);
  }

  foreach (_faq_video_installed_instances() as $instance) {
    field_create_instance($instance);
  }
}

function _faq_video_installed_fields() {
  return array(
    'field_video_url' => array(
      'field_name' => 'field_video_url',
      'type' => 'text',
      'cardinality' => 1,
    ),
    'field_video_description' => array(
      'field_name' => 'field_video_description',
      'type' => 'text_long',
      'cardinality' => 1,
    ),
  );

}
function _faq_video_installed_instances() {
  $t = get_t();

  return array(
    'field_video_url' => array(
      'field_name' => 'field_video_url',
      'label' => $t('FAQ Video URL'),
      'bundle' => 'faq_video',
      'entity_type' => 'node',
      'widget' => array(
        'type' => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
        ),
      ),
      'description' => $t('Enter the URL to the video. For example: https://www.youtube.com/watch?v=JuSDet45aKI'),
    ),
    'field_video_description' => array(
      'field_name' => 'field_video_description',
      'label' => $t('Video Description'),
      'bundle' => 'faq_video',
      'entity_type' => 'node',
      'widget' => array(
        'type' => 'text_textarea',
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
        ),
      ),
      'description' => $t('Enter a description to display below the video. Leave blank if you do not want to display a description.'),
    ),
  );
}

/**
 * Implements hook_uninstall().
 */
function faq_videos_uninstall() {
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'faq_video'));
  $nids = array();

  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  node_delete_multiple($nids);

  $instance = array('field_name' => 'comment_body','bundle' => 'comment_node_faq_video','entity_type' => 'comment');
  field_delete_instance($instance);

  $instance = array('field_name' => 'body','bundle' => 'faq_video','entity_type' => 'node');
  field_delete_instance($instance);

  $fields = array_keys(_faq_video_installed_fields());
  foreach ($fields as $field) {
    field_delete_field($field);
  }

  // Purge all field infromation
  field_purge_batch(1000);
}
