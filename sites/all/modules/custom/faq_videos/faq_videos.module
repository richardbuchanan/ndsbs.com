<?php

/**
 * @file
 * Code for the FAQ Videos module.
 */

/**
 * Implements hook_help().
 */
function faq_videos_help($path, $arg) {
  switch ($path) {
    case 'admin/content/faq-videos':
      return '<p>' . t('This page provides administration actions to manage FAQ videos.') . '</p>';
  }
}

/**
 * Implements hook_views_api().
 */
function faq_videos_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'faq_videos') . '/includes/views',
    'template path' => drupal_get_path('module', 'faq_videos') . '/templates',
  );
}

/**
 * Implements hook_node_info()
 */
function faq_videos_node_info() {
  return array(
    'faq_video' => array(
      'name' => t('FAQ Video'),
      'base' => 'faq_videos',
      'description' => t('Use <em>FAQ Videos</em> to create videos about frequently asked questions.'),
      'has_title' => TRUE,
      'title_label' => t('Video title'),
    ),
  );
}

/**
 * Implement hook_form()
 */
function faq_videos_form($node, $form_state) {
  $type = node_type_get_type($node);
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->title_label),
    '#default_value' => !empty($node->title) ? $node->title : '',
    '#required' => FALSE,
    '#weight' => -5,
    '#description' => t('The title to display above the video. Leave blank if you do not want to display a title.'),
  );

  return $form;
}

/**
 * Retreives FAQ Videos promoted to the front page.
 *
 * @return array
 *   An array of field values for promoted videos.
 */
function faq_videos_get_all_promoted() {
  $type = 'faq_video';
  $nodes = node_load_multiple(array(), array('type' => $type));
  $promoted_nodes = array();

  foreach ($nodes as $nid => $node) {
    $promoted = field_get_items('node', $node, 'field_video_promote');

    if ($promoted[0]['value']) {
      $url = field_get_items('node', $node, 'field_video_url');
      $video_url = field_view_value('node', $node, 'field_video_url', $url[0]);

      $description = field_get_items('node', $node, 'field_video_description');
      $video_description = field_view_value('node', $node, 'field_video_description', $description[0]);

      $promoted_nodes[$nid] = array(
        'title' => $node->title,
        'url' => $video_url,
        'description' => $video_description,
      );
    }
  }

  return $promoted_nodes;
}

/**
 * Returns HTML for embedded videos promoted to the front page.
 *
 * @return string
 *   Formatted HTML of embedded videos.
 */
function faq_videos_embed_promoted() {
  $videos = faq_videos_get_all_promoted();
  $output = '';

  if ($videos) {
    $output .= '<div class="col-xs-12">';
    $output .= '<h2 class="faq-videos-title">Get Answers to Common Questions Here</h2>';
    $output .= '</div>';

    foreach ($videos as $nid => $video) {

      $output .= '<div class="col-xs-12 col-sm-12 col-md-6">';
      $output .= '<h2>' . $video['title'] . '</h2>';
      $output .= '<div class="embed-responsive embed-responsive-16by9">';

      if (substr($video['url']['#markup'], 0, 18) === 'https://vimeo.com/') {
        $video_id = str_replace('https://vimeo.com/', '', $video['url']['#markup']);
        $output .= '<iframe src="https://player.vimeo.com/video/' . $video_id . '?color=82796f&title=0&byline=0&portrait=0" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';
      }

      $output .= '</div>';

      if (!empty($video['description']['#markup'])) {
        $output .= '<p class="paragraph-margin">' . $video['description']['#markup'] . '</p>';
      }

      $output .= '</div>';
    }
  }

  return $output;
}
