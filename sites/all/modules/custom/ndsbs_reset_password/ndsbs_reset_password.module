<?php
/**
 * @file
 * Module name ndsbs_reset_password.module
 * Finoit Technologies
 * Developer krishna@finoit.com
 * Allows developer to customize the site's functionality.
 */


/*
 *  Implementation of hook_menu()
 *  Function ndsbs_reset_password_menu() defined
 *  Parameter no
 */
function ndsbs_reset_password_menu() {
    $items = array();
    $items['user/reset/password/%/%'] = array(
        'title'           => 'Reset Password',
        'description'     => 'User reset password page.',
        //'access callback' => 'user_is_logged_in',
        'page callback'   => '_user_reset_password_custom',
        'access arguments' => array('access content'),
    );
    return $items;
}

/*
 *  Implementation of hook_theme()
 *  Function ndsbs_custom_theme() defined
 *  Parameter no
 */
function ndsbs_reset_password_theme() {
    $items = array();
    $items['user_reset_password_form'] = array(
        'render element' => 'form',
        'template' => 'user_reset_password_form',
    );

    return $items;
}

/*
 *  Implementation of _user_reset_password_custom()
 *  Function _user_reset_password_custom() defined
 *  To resent the user password
 *  Parameter no
 */
function _user_reset_password_custom() {
    global $user;
    if($user->uid > 0) {
        drupal_goto('user/'.$user->uid);
    }
    return drupal_get_form('user_reset_password_form');
}

/*
 *  Implementation of user_reset_password_form()
 *  Function user_reset_password_form() defined
 *  To create the form
 *  Parameter no
 */
function user_reset_password_form($form, &$form_state) {
    $form['confirm_new_password'] = array(
        '#type' => 'password_confirm',
        '#required' => True,
        '#maxlength' => 64,
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#default_value' => t('Reset Password'),
    );
    $form['#submit'][] = 'update_user_reset_password';
    return $form;
}

/*
 *  Implementation of update_user_reset_password()
 *  Function update_user_reset_password() defined
 *  To update the user password
 *  Parameter no
 */
function update_user_reset_password($form, &$form_state) {
    global $user;
    $uid = arg(3);
    $user_information = user_load($uid);
    $timestamp = arg(4);
    $hashed_pass = arg(5);
    if($hashed_pass == user_pass_rehash($user_information->pass, $timestamp, $user_information->login)) {
        //  Core inc file included
        require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

        $new_password = $form_state['values']['confirm_new_password'];
        $new_password_hash = user_hash_password($new_password);
        db_update('users')
                ->fields(array('pass' => $new_password_hash))
                ->condition('uid', $uid)
                ->execute();
        
        //  Update the table that user has verified the account
        $user_load = user_load($uid);
        _ndsbs_user_signup_confirmation($uid, $user_load);
        
        drupal_set_message(t('Password reset sussessfully. Please login.'));
        drupal_goto('user/login');
    } else {
        drupal_set_message(t('You have tried to use a one-time login link that has either been used or is no longer valid. Please request a new one using the form below.'));
        drupal_goto('user/password');
    }
}
