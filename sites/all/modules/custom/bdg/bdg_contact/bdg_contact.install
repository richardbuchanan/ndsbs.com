<?php

/**
 * @file
 * Install, update and uninstall functions for the contact module.
 */

/**
 * Implements hook_schema().
 */
function bdg_contact_schema() {
  $schema['bdg_contact'] = array(
    'description' => 'Contact form category settings.',
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique category ID.',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Category name.',
        'translatable' => TRUE,
      ),
      'recipients' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Comma-separated list of recipient e-mail addresses.',
      ),
      'reply' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Text of the auto-reply message.',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "The category's weight.",
      ),
      'selected' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Flag to indicate whether or not category is selected by default. (1 = Yes, 0 = No)',
      ),
    ),
    'primary key' => array('cid'),
    'unique keys' => array(
      'category' => array('category'),
    ),
    'indexes' => array(
      'list' => array('weight', 'category'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function bdg_contact_install() {
  // Insert a default contact category.
  db_insert('bdg_contact')
    ->fields(array(
      'category' => 'Website feedback',
      'recipients' => variable_get('site_mail', ini_get('sendmail_from')),
      'selected' => 1,
      'reply' => '',
    ))
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function bdg_contact_uninstall() {
  variable_del('bdg_contact_default_status');
  variable_del('bdg_contact_threshold_limit');
  variable_del('bdg_contact_threshold_window');
  variable_del('bdg_contact_core-contact-disabled');
}

/**
 * Implements hook_enable().
 */
function bdg_contact_enable() {

  // Check if core "contact" module is enabled.
  if (module_exists('contact')) {

    // Disable the core "contact" module to avoid double menu rendering.
    module_disable(array('contact'), FALSE);

    // Display message to the administrator that the module is disabled.
    drupal_set_message(t('<strong>BDG Contact</strong> module successfully enabled!<br />The core "Contact" module was automatically disabled to avoid conflicts. Disabling the BDG Contact module will automatically re-enable the core Contact module, so you have nothing to worry about.'), 'status');

    // Let the database know that the module was disabled.
    variable_set('bdg_contact_core-contact-disabled', TRUE);

  }
}

/**
 * Implements hook_disable().
 */
function bdg_contact_menu_disable() {

  // Check if core "Contact" module was disabled by BDG Contact.
  if (variable_get('bdg_contact_core-contact-disabled', FALSE)) {

    // If true, re-enable the "Contact" module.
    module_enable(array('contact'), FALSE);

    // Display message to the administrator that the module is disabled.
    drupal_set_message(t('<strong>BDG Contact</strong> module successfully disabled!<br />The core "Contact" module  was automatically re-enabled.'), 'status');

  }
}

/**
 * Implements hook_update_dependencies().
 */
function bdg_contact_update_dependencies() {
  // bdg_contact_update_7001() relies on the {role_permission} table being updated
  // to the new format and filled with data.
  $dependencies['bdg_contact'][7001] = array(
    'system' => 7007,
  );

  // bdg_contact_update_7002() relies on the {role_permission} table having the
  // module field, which is created in user_update_7006().
  $dependencies['bdg_contact'][7002] = array(
    'user' => 7006,
  );

  return $dependencies;
}

/**
 * Rename the threshold limit variable.
 */
function bdg_contact_update_7000() {
  variable_set('bdg_contact_threshold_limit', variable_get('bdg_contact_hourly_threshold', 5));
  variable_del('bdg_contact_hourly_threshold');
}

/**
 * Rename the administer contact forms permission.
 */
function bdg_contact_update_7001() {
  db_update('role_permission')
    ->fields(array('permission' => 'administer contact forms'))
    ->condition('permission', 'administer site-wide contact form')
    ->execute();
}

/**
 * Enable the 'access user contact forms' for registered users by default.
 */
function bdg_contact_update_7002() {
  // Do not use user_role_grant_permission() since it relies on
  // hook_permission(), which will not run for contact module if it is
  // disabled.
  db_merge('role_permission')
    ->key(array(
      'rid' => DRUPAL_AUTHENTICATED_RID,
      'permission' => 'access user contact forms',
      'module' => 'bdg_contact',
    ))
    ->execute();
}

/**
 * Change the weight column to normal int.
 */
function bdg_contact_update_7003() {
  db_drop_index('bdg_contact', 'list');
  db_change_field('bdg_contact', 'weight', 'weight', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => "The category's weight.",
  ), array(
    'indexes' => array(
      'list' => array('weight', 'category'),
    ),
  ));
}