<?php

/**
 * @file
 * Implements BluePay payment services for use in Drupal.
 */

/**
 * Implements hook_mail().
 */
function bluepay_mail($key, &$message, $params) {
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
  $language = $message['language'];

  $variables = array(
    '!site-name' => variable_get('site_name'),
    '!subject' => $params['subject'],
  );

  switch ($key) {
    case 'bluepay_order':
      $message['subject'] .= t('[!site-name] !subject', $variables, array('langcode' => $language->language));
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_menu().
 */
function bluepay_menu() {
  $items = array();

  $items['admin/config/bluepay'] = array(
    'title' => 'BluePay API',
    'description' => 'Configure your BluePay merchant settings to integrate BluePay with this Drupal site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bluepay_system_settings_form'),
    'access arguments' => array('administer bluepay'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bluepay_permission() {
  return array(
    'administer bluepay' => array(
      'title' => t('Administer BluePay API'),
      'description' => t('Perform administration tasks for BluePay API module.'),
    ),
  );
}

/**
 * System settings form
 *
 * This form allows administrators to configure the BluePay module and various
 * BluePay account settings.
 *
 * @return array
 *   Returns a form array to be rendered later.
 */
function bluepay_system_settings_form() {
  $form['bluepay_account_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Account name'),
    '#default_value' => variable_get('bluepay_account_name'),
    '#description' => t('Enter your BluePay account name.'),
    '#required' => TRUE,
  );
  $form['bluepay_account_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Account ID'),
    '#default_value' => variable_get('bluepay_account_id'),
    '#description' => t('Enter your BluePay account ID.'),
    '#required' => TRUE,
  );
  $form['bluepay_secret_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Secret key'),
    '#default_value' => variable_get('bluepay_secret_key'),
    '#description' => t('Enter your BluePay secret key.'),
    '#required' => TRUE,
  );
  $form['bluepay_mode'] = array(
    '#type' => 'radios',
    '#title' => t('Mode'),
    '#default_value' => variable_get('bluepay_mode', 0),
    '#description' => t('Select which mode transactions are performed against. Test mode allows you to make a transaction to the sandbox account.'),
    '#options' => array(0 => t('Live'), 1 => t('Test')),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Builds the checkout form for the given order.
 */
function bluepay_payment_form($form, &$form_state, $order) {
  global $user;
  $output[0] = 'No rush service';
  $cart_items = get_cart_items();

  // BluePay's test mode requires an odd value for the total amount, so we set
  // the rush service to 75 in order to get an approved transaction response.
  $host = $_SERVER['HTTP_HOST'];
  $dev_env = $host == 'localhost.ndsbs' || $host == 'dev.ndsbs.com';
  if ($dev_env) {
    if ($cart_items[0]->nid != '3965') {
      $form_state['values']['rush_service'] = 75;
    }
  }

  if ($dev_env) {
    $title['#markup'] = $order->title;
  }
  else{
    $title = field_get_items('node', $order, 'field_assessment_title');
    $title = field_view_value('node', $order, 'field_assessment_title', $title[0]);
  }

  $amount = field_get_items('node', $order, 'field_primary_service_amount');
  $amount = field_view_value('node', $order, 'field_primary_service_amount', $amount[0]);
  $assessment_amount = (int)$amount['#markup'];

  foreach ($cart_items as $cart_item) {
    $node_id = $cart_item->nid;

    if ($cart_item->sub_report != 1) {
      $custom_special_amount = get_special_assessment_custom_amount($node_id);

      if ($_SESSION['misc_service_price'] > 0) {
        $assessment_amount = $_SESSION['misc_service_price'];
      }
      elseif ($custom_special_amount > 0) {
        $assessment_amount = $custom_special_amount;
      }
    }
  }

  $rush_amount = isset($form_state['values']['rush_service']) ? $form_state['values']['rush_service'] : 0;

  $total = number_format($assessment_amount + $rush_amount, 2);
  $tid = 5;
  $terms = taxonomy_get_tree($tid, $parent = 0, $max_depth = NULL, $load_entities = TRUE);

  foreach ($terms as $data) {
    $rush_term_amount = $data->field_rush_amount['und'][0]['value'];
    $description = $data->description;
    $option = $description . ' ($' . $rush_term_amount . ')';
    $explode = explode('.', $rush_term_amount);
    $output[$explode[0]] = $option;
  }

  // Attach the payment script to the form.
  $form['#attached']['js'][] = drupal_get_path('theme', 'bootstrap_ndsbs') . '/js/payment.js';
  $form['#attached']['js'][] = drupal_get_path('theme', 'bootstrap_ndsbs') . '/js/creditcard.js';

  // Create form state values for the user account and assessment.
  $form_state['account'] = clone($user);
  $form_state['order'] = $order;

  // Restore form errors.
  if (!empty($form_state['storage']['errors'])) {
    $form_errors = &drupal_static('form_set_error', array());
    $form_errors = $form_state['storage']['errors'];
  }

  $button_attributes = array(
    'attributes' => array(
      'class' => array(
        'uk-button',
        'uk-button-default',
        'uk-margin-small-left',
      ),
    )
  );
  $empty_cart = l('Empty cart', '/cart/empty', $button_attributes);

  $rush_prefix = '<div id="rush-details" class="col-xs-12 col-md-7"><div class="panel panel-default rush-service-box"><div class="panel-heading"><h3 class="panel-title">Rush Services</h3></div><div class="panel-body" data-form-state="enabled">';
  $rush_suffix = '<p class="about-rush">Not sure if you need a rush order?<br>Call <a href="tel:6148887274">614-888-7274</a> or email <a href="mailto:support@ndsbs.com">support@ndsbs.com</a></p></div><div class="panel-footer"><h4>ABOUT RUSH ORDERS</h4><p>We will make an effort to schedule you as soon as we can. The time frames for rush orders begin once your interview with the evaluator is completed.</p></div></div></div>';
  $summary_markup = '<div id="order-summary" class="col-xs-12 col-md-5"><div class="panel panel-default rush-service-box"><div class="panel-heading"><h3 class="panel-title">Order Summary</h3></div><div class="panel-body"><div class="row">';
  $summary_markup .= $assessment_amount ? '<div class="order-summary-assessment col-xs-12"><span class="pull-left">' . $title['#markup'] . ':</span><span class="pull-right">$' . number_format($assessment_amount, 2) . '</span></div>' : '';
  $summary_markup .= '<div class="order-summary-rush-service col-xs-12"><span class="pull-left">Rush service:</span><span class="pull-right">$' . number_format($rush_amount, 2) . '</span></div><div class="order-summary-total col-xs-12"><hr><span class="pull-left"><h2>Order Total:</h2></span><span class="pull-right"><h2>$' . $total . '</h2></span></div></div></div></div></div>';
  $cc_prefix = '<div id="payment-details" class="col-xs-12 col-md-7"><div class="panel panel-default credit-card-box"><div class="panel-heading"><h3 class="panel-title display-td">Payment Details</h3></div><div class="panel-body"><img class="img-responsive pull-right" src="/' . drupal_get_path('theme', 'bootstrap_ndsbs') . '/css/images/accepted_c22e0.png">';
  $cc_suffix = '</div></div></div>';

  $form['form_wrapper'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'id' => 'blupay-payment-form-ajax-wrapper',
      'class' => array('row'),
    ),
  );
  $form['form_wrapper']['rush_service'] = array(
    '#type' => 'radios',
    '#title' => t('Select rush service'),
    '#options' => $output,
    '#required' => TRUE,
    '#default_value' => $rush_amount,
    '#prefix' => $rush_prefix,
    '#suffix' => $rush_suffix,
    '#ajax' => array(
      'callback' => 'bluepay_payment_form_ajax',
      'wrapper' => 'blupay-payment-form-ajax-wrapper',
      'effect' => 'fade',
    ),
  );
  $form['form_wrapper']['summary'] = array(
    '#markup' => $summary_markup,
  );
  $form['form_wrapper']['cc'] = array(
    '#type' => 'container',
    '#prefix' => $cc_prefix,
    '#suffix' => $cc_suffix,
  );
  $form['form_wrapper']['cc']['credit_card'] = array(
    '#type' => 'select',
    '#title' => t('Select Credit card'),
    '#options' => array(
      'AmEx' => t('American Express'),
      'Discover' => t('Discover'),
      'Maestro' => t('Maestro'),
      'MasterCard' => t('MasterCard'),
      'Visa' => t('Visa'),
    ),
    '#required' => TRUE
  );
  $form['form_wrapper']['cc']['name_on_card'] = array(
    '#type' => 'textfield',
    '#title' => t('Name on card'),
    '#size' => 25,
    '#required' => TRUE,
  );
  $form['form_wrapper']['cc']['card_number'] = array(
    '#type' => 'credit_card',
    '#title' => t('Card Number'),
    '#required' => TRUE,
    '#font-awesome-icon' => 'credit-card',
  );
  $form['form_wrapper']['cc']['expiration_month'] = array(
    '#type' => 'select',
    '#title' => t('Expiration Month'),
    '#options' => array(
      t('01') => t('01 - January'),
      t('02') => t('02 - February'),
      t('03') => t('03 - March'),
      t('04') => t('04 - April'),
      t('05') => t('05 - May'),
      t('06') => t('06 - June'),
      t('07') => t('07 - July'),
      t('08') => t('08 - August'),
      t('09') => t('09 - September'),
      t('10') => t('10 - October'),
      t('11') => t('11 - November'),
      t('12') => t('12 - December'),
    ),
    '#required' => TRUE
  );
  $form['form_wrapper']['cc']['expiration_year'] = array(
    '#type' => 'select',
    '#title' => t('Expiration Year'),
    '#options' => array(
      t('16') => t('2016'),
      t('17') => t('2017'),
      t('18') => t('2018'),
      t('19') => t('2019'),
      t('20') => t('2020'),
      t('21') => t('2021'),
      t('22') => t('2022'),
      t('23') => t('2023'),
      t('24') => t('2024'),
      t('25') => t('2025'),
      t('26') => t('2026'),
      t('27') => t('2027'),
      t('28') => t('2028'),
      t('29') => t('2029'),
      t('30') => t('2030'),
      t('31') => t('2031'),
      t('32') => t('2032'),
      t('33') => t('2033'),
      t('34') => t('2034'),
      t('35') => t('2035'),
    ),
    '#required' => TRUE
  );
  $form['form_wrapper']['cc']['cvv'] = array(
    '#type' => 'textfield',
    '#title' => t('CVC'),
    '#size' => 6,
    '#maxlength' => 4,
    '#required' => TRUE
  );
  $form['form_wrapper']['actions'] = array(
    '#type' => 'actions',
  );
  $form['form_wrapper']['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit payment'),
    '#submit' => array('bluepay_payment_form_submit'),
  );
  $form['form_wrapper']['actions']['empty'] = array(
    '#markup' => $empty_cart,
  );
  $form['service_amount'] = array(
    '#type' => 'hidden',
    '#value' => $assessment_amount,
  );

  // Create default values during development.
  if ($dev_env) {
    $form['form_wrapper']['cc']['credit_card']['#default_value'] = 'Visa';
    $form['form_wrapper']['cc']['name_on_card']['#default_value'] = 'Richard Buchanan';
    $form['form_wrapper']['cc']['card_number']['#default_value'] = '4111111111111111';
    $form['form_wrapper']['cc']['expiration_month']['#default_value'] = '12';
    $form['form_wrapper']['cc']['expiration_year']['#default_value'] = '17';
    $form['form_wrapper']['cc']['cvv']['#default_value'] = '123';
    drupal_set_message('For testing purposes rush services and credit card payment information has been entered for you. Please click "Submit payment" to test the transaction.', 'warning');
  }

  return $form;
}

function bluepay_payment_form_ajax($form, $form_state) {
  return $form['form_wrapper'];
}

function bluepay_payment_form_submit($form, &$form_state) {
  include 'BluePay.php';

  $customer = user_load($form_state['account']->uid);
  $firstName = field_get_items('user', $customer, 'field_first_name');
  $firstName = field_view_value('user', $customer, 'field_first_name', $firstName[0]);
  $lastName = field_get_items('user', $customer, 'field_last_name');
  $lastName = field_view_value('user', $customer, 'field_last_name', $lastName[0]);
  $addr1 = field_get_items('user', $customer, 'field_address');
  $addr1 = field_view_value('user', $customer, 'field_address', $addr1[0]);
  $city = field_get_items('user', $customer, 'field_city');
  $city = field_view_value('user', $customer, 'field_city', $city[0]);
  $state = field_get_items('user', $customer, 'field_state');
  $state = field_view_value('user', $customer, 'field_state', $state[0]);
  $zip = field_get_items('user', $customer, 'field_zip');
  $zip = field_view_value('user', $customer, 'field_zip', $zip[0]);
  $phone = field_get_items('user', $customer, 'field_phone');
  $phone = field_view_value('user', $customer, 'field_phone', $phone[0]);
  $rush_amount = $form_state['values']['rush_service'];
  $service_amount = $form_state['values']['service_amount'];
  $total_amount = $rush_amount + $service_amount;

  $accountID = variable_get('bluepay_account_id');
  $secretKey = variable_get('bluepay_secret_key');
  $mode = variable_get('bluepay_mode') ? 'TEST' : 'LIVE';

  $payment = new BluePay(
    $accountID,
    $secretKey,
    $mode
  );

  $payment->setCustomerInformation(array(
    'firstName' => $firstName['#markup'],
    'lastName' => $lastName['#markup'],
    'addr1' => $addr1['#markup'],
    'city' => $city['#markup'],
    'state' => $state['#markup'],
    'zip' => $zip['#markup'],
    'country' => 'USA',
    'phone' => $phone['#markup'],
    'email' => $customer->mail,
  ));

  $cardNumber = $form_state['values']['card_number'];
  $cardMonth = $form_state['values']['expiration_month'];
  $cardYear = $form_state['values']['expiration_year'];
  $cardExpire = $cardMonth . $cardYear;
  $cvv2 = $form_state['values']['cvv'];

  $payment->setCCInformation(array(
    'cardNumber' => $cardNumber,
    'cardExpire' => $cardExpire,
    'cvv2' => $cvv2,
  ));

  $payment->sale(number_format($total_amount, 2));
  $payment->process();

  // Reads the response from BluePay and saves it to variable to be used later.
  if ($payment->isSuccessfulResponse()) {
    $data = get_cart_items();
    $tmp_tid_cost[$data[0]->tid]['amount'] = $service_amount;
    $tmp_tid_cost[$data[0]->tid]['sub_report'] = 0;
    $tmp_tid_cost[$data[0]->tid]['notary_amount'] = $data[0]->notary_amount;
    $response_data = json_encode($payment);
    $_SESSION['ndsbs_payment']['rush_amount'] = $rush_amount;

    $oid = $payment->getTransID();
    $nid = $data[0]->nid;
    $uid = $customer->uid;
    $cc['noc'] = $form_state['values']['name_on_card'];
    $cc['number'] = $payment->getMaskedAccount();
    $cc['expire'] = substr($cardExpire, 0, 2) . '/'. substr($cardExpire, 2, 2);

    bluepay_order_notification_mail($oid, $nid, $uid, $service_amount, $rush_amount, $cc);

    $inserted_oid = save_transaction_data($data[0]->nid, $data[0]->tid, $customer->uid, $service_amount, $rush_amount, $payment->getTransID(), $response_data, 1, NULL, 'credit card', NULL);
    save_transaction_terms($inserted_oid, $data[0]->tid, $tmp_tid_cost, $customer->uid, 1);

    $role_name = 'client';

    if ($role = user_role_load_by_name($role_name)) {
      user_multiple_role_edit(array($customer->uid), 'add_role', $role->rid);
    }

    delete_cart_items();
    $form_state['redirect'] = 'user/payment/confirmation';
  }
  else {
    drupal_set_message($payment->getMessage(), 'error');
  }
}

function bluepay_order_notification_mail($oid, $nid, $uid, $service_amount, $rush_amount, $cc) {
  $user_information = user_load($uid);
  $node_information = node_load($nid);
  $rush_total = $rush_amount;
  $grand_total = $service_amount + $rush_total;
  $dev_purchase = '';

  if ($_SERVER['HTTP_HOST'] == 'dev.ndsbs.com') {
    $dev_purchase = ' (TEST PURCHASE)';
  }

  $message_text = '<div class="container" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding-right: 15px;padding-left: 15px;margin-right: auto;margin-left: auto;"><div class="row" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;margin-right: -15px;margin-left: -15px;"><div class="col-xs-12" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;position: relative;min-height: 1px;padding-right: 15px;padding-left: 15px;float: left;width: 100%;"><div style="margin-bottom: 15px; width: 100%; text-align: center;"><a href="https://www.ndsbs.com" class="navbar-brand" title="NDSBS.com"><img src="https://www.ndsbs.com/sites/ndsbs.com/themes/custom/bootstrap_ndsbs/logo.png" alt="NDSBS" height="65"></a></div><h3 class="text-center" style="color: #a94442;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;orphans: 3;widows: 3;page-break-after: avoid;font-family: inherit;font-weight: 500;line-height: 1.1;margin-top: 20px;margin-bottom: 10px;font-size: 32px;text-align: center;">Credit Card Purchase Received' . $dev_purchase . '</h3><h3 class="text-center" style="color: #82796f;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;orphans: 3;widows: 3;page-break-after: avoid;font-family: inherit;font-weight: 500;line-height: 1.1;margin-top: 20px;margin-bottom: 10px;font-size: 24px;text-align: center;">ORDER NUMBER: ' . $oid . '</h3><div class="table-responsive" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;min-height: .01%;overflow-x: auto;"><table class="table table-striped" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;border-spacing: 0;border-collapse: collapse!important;background-color: transparent;width: 100%;max-width: 100%;margin-bottom: 0;"><thead style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;display: table-header-group;"><tr style="background-color: #82796f;color: #e7e7e7;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><th colspan="2" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;text-align: left;line-height: 1.42857143;vertical-align: bottom;border-top: 1px solid #ddd;border-bottom: 2px solid #ddd;white-space: nowrap;;">Order details</th></tr></thead><tbody style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;"><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">User:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">' . $user_information->mail . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Service purchased:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">' . $node_information->title . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Assessment amount:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">$' . number_format($service_amount, 2) . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Rush amount:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">$' . number_format($rush_amount, 2) . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Order total:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">$' . number_format($grand_total, 2) . '</td></tr></tbody></table></div><div class="table-responsive" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;min-height: .01%;overflow-x: auto;"><table class="table table-striped" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;border-spacing: 0;border-collapse: collapse!important;background-color: transparent;width: 100%;max-width: 100%;margin-bottom: 0;"><thead style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;display: table-header-group;"><tr style="background-color: #82796f;color: #e7e7e7;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><th colspan="2" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;text-align: left;line-height: 1.42857143;vertical-align: bottom;border-top: 1px solid #ddd;border-bottom: 2px solid #ddd;white-space: nowrap;">Billing details</th></tr></thead><tbody style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;"><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Name:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">' . $user_information->field_first_name['und'][0]['value'] . ' ' . $user_information->field_last_name['und'][0]['value'] . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Address:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;"><address style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;margin-bottom: 20px;font-style: normal;line-height: 1.42857143;">' . $user_information->field_address['und'][0]['value'] . '<br style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;">' . $user_information->field_city['und'][0]['value'] . ', ' . $user_information->field_state['und'][0]['value'] . ' ' . $user_information->field_zip['und'][0]['value'] . '</address></td></tr></tbody></table></div><div class="table-responsive" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;min-height: .01%;overflow-x: auto;"><table class="table table-striped" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;border-spacing: 0;border-collapse: collapse!important;background-color: transparent;width: 100%;max-width: 100%;margin-bottom: 0;"><thead style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;display: table-header-group;"><tr style="background-color: #82796f;color: #e7e7e7;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><th colspan="2" style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;text-align: left;line-height: 1.42857143;vertical-align: bottom;border-top: 1px solid #ddd;border-bottom: 2px solid #ddd;white-space: nowrap;">Credit card details</th></tr></thead><tbody style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;"><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Name:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">' . $cc['noc'] . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Number:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">' . $cc['number'] . '</td></tr><tr style="-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;page-break-inside: avoid;"><td style="width: 25%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">Expiration:</td><td style="width: 75%;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;padding: 8px;line-height: 1.42857143;vertical-align: top;border-top: 1px solid #ddd;white-space: nowrap;background-color: #fff!important;">' . $cc['expire'] . '</td></tr></tbody></table></div></div></div></div>';

  $to = variable_get('site_mail', ini_get('sendmail_from'));;
  $from = variable_get('site_mail', ini_get('sendmail_from'));;

  $params = array(
    'subject' => t('Credit card purchase details'),
    'message' => $message_text,
  );

  drupal_mail('bluepay', 'bluepay_order', $to, language_default(), $params, $from);
}
